- name:  install backend (node.js)
  hosts: backend
  become: yes
  tasks:
    - name: disabling node.js
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable node 20
      ansible.builtin.command: dnf module enable nodejs:20 -y
    
    - name: install node.js
      ansible.builtin.dnf:
        name: node.js
        state: present

    - name: adduser
      ansible.builtin.user:
        name: expense

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: download the application
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip
    
    - name: unzipping 
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
    
    - name: install npm dependencies 
      ansible.builtin.command: npm install
      args:
        chdir: /app
    
    - name: copy backend service 
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
    
    - name: daemon-reload
      ansible.builtin.systemd_service:
        daemon_reload: true  
    
    - name: start and enabling 
      ansible.builtin.service:
        name: backend
        enabled: yes
        state: started

    - name: install mysql 
      ansible.builtin.command: dnf install mysql -y
      
    - name: Load Schema
      ansible.builtin.shell: mysql -h mysql.bigmatrix.in -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: Restart backend 
      ansible.builtin.service:
        name: backend
        state: restarted 

